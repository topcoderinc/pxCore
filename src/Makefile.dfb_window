EXTDIR=../examples/pxScene2d/external
NODEPATH=$(EXTDIR)/libnode/
NODEINC=\
        -I$(NODEPATH)/src \
        -I$(NODEPATH)/deps/uv/include \
        -I$(NODEPATH)/deps/v8 \
        -I$(NODEPATH)/deps/debugger-agent/include \
        -I$(NODEPATH)/deps/v8/include \
        -I$(NODEPATH)/deps/cares/include 
INCLUDE_PATHS=$(NODEINC) -I.
EXTRA_DEFINES=-DENABLE_RT_NODE -DENABLE_HTTP_CACHE -DRUNINMAIN

CFLAGS= -DPX_PLATFORM_DFB_NON_X11 -DENABLE_DFB -fPIC -g -DRT_PLATFORM_LINUX -DENABLE_RT_NODE -DBSTD_CPU_ENDIAN=BSTD_ENDIAN_LITTLE $(EXTRA_DEFINES)
CXXFLAGS=  $(CFLAGS) $(INCLUDE_PATHS) -std=c++0x

OUTDIR=../build/dfb

INCDIR=$(PXCORE_INCLUDES) -Igeneric/ -I/usr/X11R6/include -I/usr/local/include/directfb -I. $(INCLUDE_PATHS)

all: $(OUTDIR)/librtCore.so $(OUTDIR)/librtCore_s.a $(OUTDIR)/libpxCore.a
clean: 
	rm *.o
	rm $(OUTDIR)/librtCore.so
	rm $(OUTDIR)/librtCore_s.a
	rm $(OUTDIR)/libpxCore.a

$(OUTDIR)/librtCore_s.a: 
	rm *.o
$(OUTDIR)/librtCore_s.a: utf8.o rtString.o rtLog.o rtValue.o rtObject.o rtError.o ioapi_mem.o
	mkdir -p $(OUTDIR)
	$(AR) rc $(OUTDIR)/librtCore_s.a utf8.o rtString.o rtLog.o rtValue.o rtObject.o rtError.o ioapi_mem.o

$(OUTDIR)/librtCore.so: 
	rm *.o
$(OUTDIR)/librtCore.so: utf8.o rtString.o rtLog.o rtValue.o rtObject.o rtError.o ioapi_mem.o
	mkdir -p $(OUTDIR)
	$(CXX) utf8.o rtString.o rtLog.o rtValue.o rtObject.o rtError.o ioapi_mem.o -pthread -ldl -shared -o $(OUTDIR)/librtCore.so

$(OUTDIR)/libpxCore.a: pxOffscreen.o pxWindowUtil.o pxBufferNativeDfb.o pxOffscreenNativeDfb.o pxEventLoopNative.o pxWindowNativeDfb.o pxTimerNative.o pxViewWindow.o pxClipboardNative.o jsCallback.o rtFunctionWrapper.o rtObjectWrapper.o rtWrapperUtils.o rtFile.o rtLibrary.o rtNode.o rtPathUtils.o rtTest.o rtThreadPool.o rtThreadQueue.o rtThreadTask.o rtMutexNative.o rtThreadPoolNative.o rtUrlUtils.o rtZip.o unzip.o ioapi.o pxInterpolators.o pxMatrix4T.o pxUtil.o rtFileDownloader.o rtFileCache.o rtHttpCache.o
	mkdir -p $(OUTDIR)    
	ar rc $(OUTDIR)/libpxCore.a pxOffscreen.o pxWindowUtil.o pxBufferNativeDfb.o pxOffscreenNativeDfb.o pxEventLoopNative.o pxWindowNativeDfb.o pxTimerNative.o pxViewWindow.o pxClipboardNative.o jsCallback.o rtFunctionWrapper.o rtObjectWrapper.o rtWrapperUtils.o rtFile.o rtLibrary.o rtNode.o rtPathUtils.o rtTest.o rtThreadPool.o rtThreadQueue.o rtThreadTask.o rtMutexNative.o rtThreadPoolNative.o rtUrlUtils.o rtZip.o unzip.o ioapi.o pxInterpolators.o pxMatrix4T.o pxUtil.o rtFileDownloader.o rtFileCache.o rtHttpCache.o

pxViewWindow.o: pxViewWindow.cpp
	$(CXX) -o pxViewWindow.o -Wall $(INCDIR) $(CFLAGS) -c pxViewWindow.cpp

pxOffscreen.o: pxOffscreen.cpp
	$(CXX) -o pxOffscreen.o -Wall $(INCDIR) $(CFLAGS) -c pxOffscreen.cpp

pxBufferNativeDfb.o: x11/pxBufferNativeDfb.cpp
	$(CXX) -o pxBufferNativeDfb.o -Wall $(INCDIR) $(CFLAGS) -c x11/pxBufferNativeDfb.cpp

pxOffscreenNativeDfb.o: x11/pxOffscreenNativeDfb.cpp
	$(CXX) -o pxOffscreenNativeDfb.o -Wall $(INCDIR) $(CFLAGS) -c x11/pxOffscreenNativeDfb.cpp

pxWindowNativeDfb.o: x11/pxWindowNativeDfb.cpp
	$(CXX) -o pxWindowNativeDfb.o -Wall $(INCDIR) $(CFLAGS) -c x11/pxWindowNativeDfb.cpp

pxEventLoopNative.o: x11/pxEventLoopNative.cpp
	$(CXX) -o pxEventLoopNative.o -Wall $(INCDIR) $(CFLAGS) -c x11/pxEventLoopNative.cpp

pxTimerNative.o: x11/pxTimerNative.cpp
	$(CXX) -o pxTimerNative.o -Wall $(INCDIR) $(CFLAGS) -c x11/pxTimerNative.cpp

pxClipboardNative.o: x11/pxClipboardNative.cpp
	$(CXX) -o pxClipboardNative.o -Wall $(INCDIR) $(CFLAGS) -c x11/pxClipboardNative.cpp

pxWindowUtil.o: pxWindowUtil.cpp
	$(CXX) -o pxWindowUtil.o -Wall $(INCDIR) $(CFLAGS) -c pxWindowUtil.cpp

jsCallback.o: jsbindings/jsCallback.cpp
	$(CXX) -o jsCallback.o -Wall $(INCDIR) $(CXXFLAGS) -c jsbindings/jsCallback.cpp
rtFunctionWrapper.o: jsbindings/rtFunctionWrapper.cpp
	$(CXX) -o rtFunctionWrapper.o -Wall $(INCDIR) $(CXXFLAGS) -c jsbindings/rtFunctionWrapper.cpp
rtObjectWrapper.o: jsbindings/rtObjectWrapper.cpp
	$(CXX) -o rtObjectWrapper.o -Wall $(INCDIR) $(CXXFLAGS) -c jsbindings/rtObjectWrapper.cpp
rtWrapperUtils.o: jsbindings/rtWrapperUtils.cpp
	$(CXX) -o rtWrapperUtils.o -Wall $(INCDIR) $(CXXFLAGS) -c jsbindings/rtWrapperUtils.cpp
rtError.o: rtError.cpp
	$(CXX) -o rtError.o -Wall $(INCDIR) $(CXXFLAGS) -c rtError.cpp
rtFile.o: rtFile.cpp
	$(CXX) -o rtFile.o -Wall $(INCDIR) $(CXXFLAGS) -c rtFile.cpp
rtLibrary.o: rtLibrary.cpp
	$(CXX) -o rtLibrary.o -Wall $(INCDIR) $(CXXFLAGS) -c rtLibrary.cpp
rtLog.o: rtLog.cpp
	$(CXX) -o rtLog.o -Wall $(INCDIR) $(CXXFLAGS) -c rtLog.cpp
rtNode.o: rtNode.cpp
	$(CXX) -o rtNode.o -Wall $(INCDIR) $(CXXFLAGS) -c rtNode.cpp
rtObject.o: rtObject.cpp
	$(CXX) -o rtObject.o -Wall $(INCDIR) $(CXXFLAGS) -c rtObject.cpp
rtPathUtils.o: rtPathUtils.cpp
	$(CXX) -o rtPathUtils.o -Wall $(INCDIR) $(CXXFLAGS) -c rtPathUtils.cpp
rtString.o: rtString.cpp
	$(CXX) -o rtString.o -Wall $(INCDIR) $(CXXFLAGS) -c rtString.cpp
rtTest.o: rtTest.cpp
	$(CXX) -o rtTest.o -Wall $(INCDIR) $(CXXFLAGS) -c rtTest.cpp
rtThreadPool.o: rtThreadPool.cpp
	$(CXX) -o rtThreadPool.o -Wall $(INCDIR) $(CXXFLAGS) -c rtThreadPool.cpp
rtThreadQueue.o: rtThreadQueue.cpp
	$(CXX) -o rtThreadQueue.o -Wall $(INCDIR) $(CXXFLAGS) -c rtThreadQueue.cpp
rtThreadTask.o: rtThreadTask.cpp
	$(CXX) -o rtThreadTask.o -Wall $(INCDIR) $(CXXFLAGS) -c rtThreadTask.cpp
rtMutexNative.o: unix/rtMutexNative.cpp
	$(CXX) -o rtMutexNative.o -Wall $(INCDIR) $(CXXFLAGS) -c unix/rtMutexNative.cpp
rtThreadPoolNative.o: unix/rtThreadPoolNative.cpp
	$(CXX) -o rtThreadPoolNative.o -Wall $(INCDIR) $(CXXFLAGS) -c unix/rtThreadPoolNative.cpp
rtUrlUtils.o: rtUrlUtils.cpp
	$(CXX) -o rtUrlUtils.o -Wall $(INCDIR) $(CXXFLAGS) -c rtUrlUtils.cpp
rtValue.o: rtValue.cpp
	$(CXX) -o rtValue.o -Wall $(INCDIR) $(CXXFLAGS) -c rtValue.cpp
rtZip.o: rtZip.cpp
	$(CXX) -o rtZip.o -Wall $(INCDIR) $(CXXFLAGS) -c rtZip.cpp
utf8.o: utf8.c
	$(CC) -o utf8.o -Wall $(INCDIR) $(CFLAGS) -c utf8.c
unzip.o: unzip.c
	$(CC) -o unzip.o -Wall $(INCDIR) $(CFLAGS) -c unzip.c
ioapi_mem.o: ioapi_mem.c
	$(CC) -o ioapi_mem.o -Wall $(INCDIR) $(CFLAGS) -c ioapi_mem.c
ioapi.o: ioapi.c
	$(CC) -o ioapi.o -Wall $(INCDIR) $(CFLAGS) -c ioapi.c
pxInterpolators.o: pxInterpolators.cpp
	$(CXX) -o pxInterpolators.o -Wall $(INCDIR) $(CXXFLAGS) -c pxInterpolators.cpp
pxMatrix4T.o: pxMatrix4T.cpp
	$(CXX) -o pxMatrix4T.o -Wall $(INCDIR) $(CXXFLAGS) -c pxMatrix4T.cpp
pxUtil.o: pxUtil.cpp
	$(CXX) -o pxUtil.o -Wall $(INCDIR) $(CXXFLAGS) -c pxUtil.cpp
rtFileDownloader.o: rtFileDownloader.cpp
	$(CXX) -o rtFileDownloader.o -Wall $(INCDIR) $(CXXFLAGS) -c rtFileDownloader.cpp
rtFileCache.o: rtFileCache.cpp
	$(CXX) -o rtFileCache.o -Wall $(INCDIR) $(CXXFLAGS) -c rtFileCache.cpp
rtHttpCache.o: rtHttpCache.cpp
	$(CXX) -o rtHttpCache.o -Wall $(INCDIR) $(CXXFLAGS) -c rtHttpCache.cpp
